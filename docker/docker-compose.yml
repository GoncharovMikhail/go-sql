version: "3.9"

services:

  postgres:
    image: postgres:13.3-alpine
    container_name: postgres
    restart: unless-stopped
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    env_file:
      - postgres/.env
    volumes:
      - ../resources/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - postgres

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter:v0.10.1
    container_name: postgres-exporter
    restart: unless-stopped
    env_file:
     prometheus/.env
    ports:
      - "9187:9187"
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 500M
    volumes:
      # - ./data:/prometheus-data
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres
    networks:
      - postgres

  grafana:
    #todo wtf versions
    image: grafana/grafana:latest
    container_name: grafana
    env_file:
      - grafana/.env
    ports:
      - "3000:3000"
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 1G
    networks:
      - monitoring
    external_links:
      - postgres
      #- monitoring

networks:
  postgres:
    driver: bridge
  monitoring:
    driver: bridge